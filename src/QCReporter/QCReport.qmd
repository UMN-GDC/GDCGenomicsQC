---
title: "Genomics QC Report"
author: "GDC Data Team"
date: today
format: 
  html:
    toc: true
    html-math-method: katex
    embed-resources: true
execute:
  echo: false
  warning: false
  error: false
  message: false
  toc: true
---


```{r setup, include=FALSE}
library(tidyverse)
library(ggmanh)
source("distViz.R")
source("logReader.R")
```

The following is an automated report describing the quality control (QC) processing of your dataset.
detailed description of the QC steps taken. 

# General Summary 
The QC process outline below first process the data in aggregate removing SNPs and subjects with large amounts
of missingness. In addition, SNPs are filtered to remove those with low minor allele frequency (MAF), frequencies
are two out of equlibrium based on [Hardy-Weinberg equilibrium (HWE)](https://www.nature.com/scitable/definition/hardy-weinberg-equilibrium-122/). Then, for multiethnic samples, subject 
ancestries are predicted using [principal components analysis (PCA)](https://www.nature.com/articles/ng1847) and [k-means clustering](https://en.wikipedia.org/wiki/K-means_clustering). Finally, the original data
is filtered again at the level of each predicted ancestry before it is later rejoined into the full dataset. Table @ref(tab:summary)
summarizes the number of SNPs and subjects at each step of the QC process.
```{r tab:summary, echo = FALSE}
inputData <- extractLog("../QCtutorial/logs/wgas2.log")
outputData <- extractLog("../QCtutorial/logs/wgas2.log")
outputData["OutSNPs"] <- outputData["OutSNPs"] - 13000
outputData["OutSubjects"] <- outputData["OutSubjects"] - 2
```
|Processing step | Number of SNPs | Number of Subjects |
|:---------------|---------------:|-------------------:|
|Input           | `r format(inputData["InSNPs"], scientific=FALSE)` | `r format(inputData["InSubjects"], scientific=FALSE)` |
|Output          | `r format(outputData["OutSNPs"], scientific=FALSE)` | `r format(outputData["OutSubjects"], scientific=FALSE)` |
|%Change         | `r format((outputData["OutSNPs"] - inputData["InSNPs"])/inputData["InSNPs"]*100, scientific=FALSE)` | `r format(outputData["OutSubjects"] -(inputData["InSubjects"] )/inputData["InSubjects"]*100, scientific=FALSE)` |

## Data set description
Case/controls


Ethnicities


## Data Processing
```{dot}
digraph G {
  input [ label = "1000 Subjects \n 10000 SNPs" ];
  filter [ label = "987 Subjects \n 9982 SNPs"];

  filter1 [label = "Ancestry 1 \n 335 Subjects"];
  filter2 [label = "Ancestry 2 \n 138 Subjects"];
  filter3 [label = "Ancestry 3 \n 514 Subjects"];

  joinedData[ label = " \n 987 Subjects \n 9862 SNPs"];

   input -> filter [ label = "MAF > 0.05, (120) \n SNP Missingness < 0.05 (200) \n Subj Missing >0.05, (3)"]; 
  filter -> filter1, filter2;
  filter -> filter3 [label = "Predict ancestry"];

  input -> filter1 [label = "Full SNP set"];
  input -> filter2, filter3;
  filter1 -> joinedData[ label = "MAF > 0.05, (15) \n SNP Missingness <0.05 (30)"];
  filter2 -> joinedData[ label = "MAF > 0.05, (15) \n SNP Missingness <0.05 (30)"]; 
  filter3 -> joinedData[ label = "MAF > 0.05, (15) \n SNP Missingness <0.05 (30)"];
}
```


# Detailed QC summary
## Per Subject summary
Subjects were filtered based on missingness and heterozygosity. An LD pruning step was also performed. 
```{r}
data.frame("Subject" = 1:100,
          "Missingness" = rbeta(100, 1, 4)) %>%
  ggplot(aes(x = Missingness)) +
  geom_histogram() + 
  geom_vline(xintercept = 0.15, color = "red") + 
  xlab("Missingness per subject") +
  ggtitle("% SNPS missing per subject")
```

The [heterozygosity F statistic (FIS)](https://en.wikipedia.org/wiki/F-statistics) the departure from HWE in a population.
The heterozygosity F statistic is given by the following equation:
$$
F = \frac{1}{N}\sum_{i=1}^N \frac{O_i - E_i}{E_i}
$$

```{r hetFilter}
#| label: fig-hetFilter
#| fig-cap: "Heterozygosity distributions with cutoff shown as red vertical line."
data.frame("Subject" = 1:100,
          "Heterozygosity" = rcauchy(100, 0.1, 0.1)) %>%
  ggplot(aes(x = Heterozygosity)) +
  geom_histogram() + 
  geom_vline(xintercept = c(-2, 2), color = "red") + 
  xlab("Heterozygosity F statistic") +
  ggtitle("Heterozygous F statistic distribution")
```

## Per SNP summary
SNPS were filtered based on missingness and MAF as well as HWE @fig-firstFilter. 


```{r firstFilter}
#| label: fig-firstFilter
#| fig-cap: "Missingness, MAF, and HWE filters involved in initial SNP filtering. Cutoffs are shown as red vertical lines"
data.frame("SNP" = 1:1000,
          "Missingness" = rbeta(1000, 1, 5)) %>%
  ggplot(aes(x = Missingness)) +
  geom_histogram() +
  geom_vline(xintercept = 0.15, color = "red") +
  xlab("Missingness per SNP") +
  ggtitle("% calls missing per SNP")


data.frame("SNP" = 1:1000,
           "MAF" = rbeta(1000, 1, 3)) %>%
  ggplot(aes(x = MAF)) +
  geom_histogram() +
  geom_vline(xintercept = 0.05, color = "red") +
  xlab("Minor allele frequency") +
  ggtitle("MAF distribution")

data.frame("SNP" = 1:1000,
          "HWE" = -rgamma(1000, 3, 2)) %>%
          ggplot(aes(x = HWE)) +
          geom_histogram() +
          geom_vline(xintercept = -0.05, color = "red") +
          xlab("log(HWE p-value)") +
          ggtitle("Hardy-Weinberg Equilibrium p-value distribution")


```


## Ancestry predictions
Ancestries are predicted after the initial round of QC steps. The principal components upon which the population is stratifed, are based off of the [genetic relatedness matrix (GRM)](https://zjuwhw.github.io/2021/08/20/GRM.html).
The subjects are then projected onto the 
PC space and assigned ethnicities using k-means clustering based on either a standard genomic dataset 
(such as though genomes) are by the reported ancestries of the subject in the study. Figure @fig-ancestryPredictions)
the projection of each subject onto the first few PCs. They are colored by their reported ancestries. 

The densities of ancestries based on the reference set are represent by the 10\% contour lines of the 2d density plots
with the observed populations presented as points over top of the densities shown in @fig-ancestryPredictions.
```{r ancestryPredictions}
#| label: fig-ancestryPredictions
#| fig-cap: "Ancestry predictions plotted over first decile contour for each ancestry."
data.frame(Ancestry = rep(c("Ancestry 1", "Ancestry 2"), each = 50),
           PC1 = c(rnorm(50, 0, 1), rnorm(50, 9, 1)),
           PC2 = c(rnorm(50, 0, 1), rnorm(50, 9, 1))) %>%
  ggplot(aes(x = PC1, y = PC2, color = Ancestry)) +
  geom_density_2d(breaks = c(0.05)) + 
  geom_point()
```



## Per Ancestry summary
We also summarize the QC metrics per ancestry. @fig-ancestrySummary) shows the distribution of MAF per ancestry.
```{r ancestrySummary}
#| label: fig-ancestrySummary
#| fig-cap: "MAF faceted by ancestry with the cutoff vizualized as a red vertical line."
data.frame("Ancestry" = rep(c("1", "2", "3"), each = 50),
           "MAF" = c(rbeta(50, 3, 2), rbeta(50, 3, 3), rbeta(50, 4, 1))) %>%
  ggplot(aes(x = MAF)) +
  geom_histogram() + 
  geom_vline(xintercept = 0.05, color = "red") + 
  xlab("Minor allele frequency") +
  ggtitle("Minor allele frequency per ancestry") + 
  facet_wrap(~Ancestry, ncol = 2)

```

# GWAS
Results of Genome Wide Association Study (GWAS) are visualized in @fig-gwas.
```{r gwas}
#| label: fig-gwas
#| fig-cap: "log pvalue of GWAS colored by chromosome."
nsim <- 50000
simdata <- data.frame(
  "chromosome" = sample(c(1:22,"X"), size = nsim, replace = TRUE),
  "position" = sample(1:100000000, size = nsim),
  "P.value" = rbeta(nsim, shape1 = 5, shape2 = 1)^7
) %>%
  mutate(chromosome = factor(chromosome))

manhattan_plot(x= simdata, pval.colname = "P.value", chr.colname = "chromosome", pos.colname = "position", plot.title = "Manhattan plot")

```



# Additional information
## Contact
Saonli Basu, PhD (saonli@umn.edu)
Director of Analytics MIDB

